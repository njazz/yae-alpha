body {
    font-family: 'Roboto', sans-serif !important;
}

html,
body {
    height: 100%;
    margin: 0;
    background: #1e1e1e;
    color: white;
}

body,
#app {
    display: flex;
    flex-direction: column;
    height: 100vh;
    padding: 10px;
    box-sizing: border-box;
}

#topbar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 60px;
    /* between 40-80px */
    margin-bottom: 10px;
}

#buttons {
    display: flex;
    gap: 10px;
}

#scope {
    background: black;
    border: 1px solid #555;
    width: 320px;
    height: 50px;
}

#scope {
    background: black;
    border: 1px solid #555;
    width: 320px;
    height: 50px;
}

#sonogram {
    background: black;
    border: 1px solid #555;
    width: 320px;
    height: 50px;

    flex-grow: 1;
    border: 1px solid #555;
    border-radius: 4px;
    overflow: hidden;
}

/* Make app fill full viewport height with flex column */
#app {
    height: 100vh;
}

/* Grid layout for editor and quickstart */
/*#editorGroup {
    display: grid;
    grid-template-columns: 1fr 6fr 2fr;
    gap: 10px;
    flex-grow: 1;
    /* fill remaining vertical space * /
    height: auto;
    /* let flexbox manage height * /
    padding: 10px;
}*/

#editorGroup {
  display: grid;
  grid-template-columns: minmax(150px, 1fr) minmax(150px, 6fr) minmax(150px, 2fr);
  gap: 10px;
  flex-grow: 1;
  height: auto;
  padding: 10px;
}

#editor {
    border: 1px solid #aaa;
    /* 2px border, solid line, black color */
    border-radius: 3px;
    /* rounded corners, 8px radius */
    background: #eee;
    /* demo color */
    height: 100%;
}

#sidebar {
    border: 1px solid #aaa;
    /* 2px border, solid line, black color */
    border-radius: 3px;
    /* rounded corners, 8px radius */
    height: 100%;
    overflow-y: auto;
    padding: 1rem;
    /*text-align: left;*/
    box-sizing: border-box;
    /*color: #aaa*/
}

#quickstart {
    border: 1px solid #aaa;
    /* 2px border, solid line, black color */
    border-radius: 3px;
    /* rounded corners, 8px radius */
    height: 100%;
    overflow-y: auto;
    padding: 1rem;
    text-align: left;
    box-sizing: border-box;
    color: #aaa
}

/* ---------------------------------------------------------------- */

/*#dspstatus {
  justify-content: flex-start; 
}

#dspstatus>* {
    text-align: left;
}*/

pre {
    color: #c099ff !important
}

/* Make sure #editorGroup expands vertically inside flex container */
#app>#editorGroup {
    min-height: 0;
    /* allow flex children to shrink */
}

.btn-primary {
    background-color: #8033ff;
    border-color: #8033ff;
}

.btn-danger {
    background-color: #ff3350;
    border-color: #ff3350;
}

.btn-primary:hover {
    background-color: #4E1F99;
    border-color: #4E1F99;
}

.btn-danger:hover{
    background-color: #991F31;
    border-color: #991F31;
}



/* ---------------------------------------------------------------- */
.faders {
    display: flex;
    flex-direction: column;
    gap: 4px;
    width: 100%;
}

.faders input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    height: 36px;
    width: 100%;
    border-radius: 4px;
    background: linear-gradient(to right, #ff6633 0%, transparent 100%);
    border: 1px solid #ccc;
    outline: none;
    margin: 0;
    padding: 0;
}

/* Track styling */
.faders input[type="range"]::-webkit-slider-runnable-track {
    height: 36px;
    border-radius: 4px;
    background: transparent;
}

.faders input[type="range"]::-moz-range-track {
    height: 36px;
    border-radius: 4px;
    background: transparent;
}

/* Thumb styling */
.faders input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    height: 36px;
    width: 0;
    /* hidden thumb */
}

.faders input[type="range"]::-moz-range-thumb {
    height: 36px;
    width: 0;
    border: none;
    background: transparent;
}

/* Dynamic fill via CSS variable */
.faders input[type="range"] {
    --val: 0;
}

.faders input[type="range"] {
    background: linear-gradient(to right,
        #ff6633 calc(var(--val) * 1%),
        transparent calc(var(--val) * 1%));
}

.faders input[type="range"]::after {
    content: "";
}

/* Update background on input */
.faders input[type="range"] {
    transition: background 0.1s;
}

.faders input[type="range"] {
    background-size: 100% 100%;
}